{"remainingRequest":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\src\\components\\TaskList.vue?vue&type=style&index=0&id=189e9673&scoped=true&lang=css","dependencies":[{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\src\\components\\TaskList.vue","mtime":1745021944491},{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745016712075},{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1745016716754},{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1745016714210},{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745016711230},{"path":"C:\\wamp64\\www\\VueProjects\\todolist\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1745016715557}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWluZXIgewogIG1heC13aWR0aDogNjAwcHg7CiAgbWFyZ2luOiAwIGF1dG87Cn0K"},{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":";AAqGA;AACA;AACA;AACA","file":"TaskList.vue","sourceRoot":"src/components","sourcesContent":["\n<script>\nexport default {\n  data() {\n    return {\n      tasks: [],\n      newTask: {\n        content: '',\n        day: '',\n        time: '',\n      }\n    };\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await fetch('http://localhost:3000/tasks');\n        const data = await response.json();\n        this.tasks = data;\n      } catch (err) {\n        console.error('Error fetching tasks:', err);\n      }\n    },\n    async addTask() {\n      try {\n        const response = await fetch('http://localhost:3000/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.newTask),\n        });\n        const newTask = await response.json();\n        this.tasks.push(newTask); \n        this.newTask = { content: '', day: '', time: '' }; \n      } catch (err) {\n        console.error('Error adding task:', err);\n      }\n    }\n  },\n  mounted() {\n    this.fetchTasks();\n  },\n};\n</script>\n\n<template>\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-3xl font-semibold mb-4\">To-Do List</h1>\n\n    <div>\n      <h2 class=\"text-xl font-medium mb-2\">Tasks</h2>\n      <ul>\n        <li\n          v-for=\"task in tasks\"\n          :key=\"task._id\"\n          class=\"bg-gray-100 my-2 p-3 rounded shadow\"\n        >\n          <strong>{{ task.content }}</strong> â€” {{ task.day }} at {{ task.time }}\n        </li>\n      </ul>\n    </div>\n\n    <div>\n      <h2 class=\"text-xl font-medium mt-4 mb-2\">Add Task</h2>\n      <form @submit.prevent=\"addTask\">\n        <input\n          type=\"text\"\n          v-model=\"newTask.content\"\n          placeholder=\"Task content\"\n          class=\"border p-2 mb-2 w-full\"\n        />\n        <input\n          type=\"text\"\n          v-model=\"newTask.day\"\n          placeholder=\"Day\"\n          class=\"border p-2 mb-2 w-full\"\n        />\n        <input\n          type=\"text\"\n          v-model=\"newTask.time\"\n          placeholder=\"Time\"\n          class=\"border p-2 mb-2 w-full\"\n        />\n        <button type=\"submit\" class=\"bg-blue-500 text-white p-2 rounded\">\n          Add Task\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n\n\n<style scoped>\n  .container {\n    max-width: 600px;\n    margin: 0 auto;\n  }\n</style>\n"]}]}